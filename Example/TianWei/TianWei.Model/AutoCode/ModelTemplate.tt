<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>

//  导入MultipleOutputHelper.ttinclude文件
<#@include file="$(ProjectDir)\MultipleOutputHelper.ttinclude"#>
<#@include file="$(ProjectDir)\CodeGeneratorHelper.ttinclude"#> 

<#		
		var manager = Manager.Create(Host, GenerationEnvironment);  
		List<CodeGeneratorHelper.TableModel> tableList = CodeGeneratorHelper.GetTableList();
		foreach(var tableModel in tableList)
		{	
			manager.StartNewFile(tableModel.Name +".cs");
			List<CodeGeneratorHelper.FieldModel> fieldList = CodeGeneratorHelper.GetFieldList(tableModel.Name);
#>/*
 * -------------------------------------------------------------------------------
 * 版权信息：	韩天伟（hantianwei.cn）	版权所有	<#= DateTime.Now.ToString("yyyy") #>
 * 功能描述：	代码处成器生成
 * 
 * 创建人：　	代码生成
 * 创建日期：	<#= DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") #>
 * 创建说明：	
 * 
 * 修改人：　	
 * 修改日期：	
 * 修改说明：	
 *    
 * -------------------------------------------------------------------------------
 */
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;


namespace TianWei.Model
{	
	
	/// <summary>
    /// <#=tableModel.Description#> 实体类
    /// </summary>
    [Serializable]
	public partial class <#=  tableModel.Name #>
	{
        #region <#=tableModel.Description#> 实体
		<#
	int i=0;
    foreach(var field in fieldList)
    {
		#>
        
        /// <summary>
        /// <#= field.Description!=null?field.Description.Replace("\r","").Replace("\n",""):"" #>
        /// </summary>
		<#
			if(field.IsPk==1)
			{
		#>
        [Key]
		[Column(Order = <#=i#>)]
		<#
			i=i+1;
			}
            else
            {
                if(field.IsIdentity==1)
                {
		#>
        [DatabaseGenerated(DatabaseGeneratedOption.Identity)]
        <#
                }
            }
        #>
        public <#= CodeGeneratorHelper.GetCSharpType(field.Type) #><#= CodeGeneratorHelper.GetIsNullString(field) #> <#= field.Name #> { get; set; }
		<# 
    }
		#>

        #endregion
    }

}
	
<#
		manager.EndBlock();    
}
       manager.Process(true);  
#> 
