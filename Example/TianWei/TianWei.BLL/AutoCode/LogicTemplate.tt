<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>

//  导入MultipleOutputHelper.ttinclude文件
<#@include file="$(ProjectDir)\MultipleOutputHelper.ttinclude"#>
<#@include file="$(ProjectDir)\CodeGeneratorHelper.ttinclude"#> 

<#		
		var manager = Manager.Create(Host, GenerationEnvironment);  

		List<CodeGeneratorHelper.TableModel> tableList = CodeGeneratorHelper.GetTableList();
		foreach(var tableModel in tableList)
		{	
			manager.StartNewFile(tableModel.Name +"BLL.cs");
			List<CodeGeneratorHelper.FieldModel> fieldList = CodeGeneratorHelper.GetFieldList(tableModel.Name);
#>/*
 * -------------------------------------------------------------------------------
 * 版权信息：	韩天伟（hantianwei.cn）	版权所有	<#= DateTime.Now.ToString("yyyy") #>
 * 功能描述：	代码处成器生成
 * 
 * 创建人：　	代码生成
 * 创建日期：	<#= DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") #>
 * 创建说明：	
 * 
 * 修改人：　	
 * 修改日期：	
 * 修改说明：	
 *    
 * -------------------------------------------------------------------------------
 */
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using TianWei.Model;
using TianWei.DAL;

namespace TianWei.BLL
{
    public partial class <#= tableModel.Name #>BLL
    {
		private <#= tableModel.Name #>DAL <#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>Dal = new <#= tableModel.Name #>DAL();

        /// <summary>
        /// <#=tableModel.Description#>-增加方法
        /// </summary>
        public void Add(<#= tableModel.Name #> <#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>)
        {
            <#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>Dal.Add(<#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>);
        }

        /// <summary>
        /// <#=tableModel.Description#>-删除方法
        /// </summary>
        public void Remove(<#= CodeGeneratorHelper.GetKeyToCondition(fieldList) #>)
        {
            <#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>Dal.Remove(<#= CodeGeneratorHelper.GetKeyToFindConditon(fieldList) #>);
        }

        /// <summary>
        /// <#=tableModel.Description#>-删除方法
        /// </summary>
        public void Remove(Expression<Func<<#= tableModel.Name #>, bool>> condition)
        {
            <#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>Dal.Remove(condition);
        }

        /// <summary>
        /// <#=tableModel.Description#>-修改方法
        /// </summary>
        public void Save(<#= tableModel.Name #> <#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>)
        {
            <#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>Dal.Save(<#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>);
        }

        /// <summary>
        /// <#=tableModel.Description#>-根据主键获取实体信息
        /// </summary>
        /// <returns></returns>
		public <#= tableModel.Name #> GetById(<#= CodeGeneratorHelper.GetKeyToCondition(fieldList) #>)
        {
            return <#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>Dal.GetById(<#= CodeGeneratorHelper.GetKeyToFindConditon(fieldList) #>);
        }

		 /// <summary>
        /// <#=tableModel.Description#>-根据查询条件获取实体信息
        /// <param name="condition">查询条件</param>
        /// </summary>
        /// <returns></returns>
        public <#= tableModel.Name #> GetItemByQuery(Expression<Func<<#= tableModel.Name #>, bool>> condition)
        {
			return <#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>Dal.GetItemByQuery(condition);
		}

        /// <summary>
        /// <#=tableModel.Description#>-根据条件查询是否存在
        /// <param name="condition">查询条件</param>
        /// </summary>
        /// <returns></returns>
        public bool IsExists(Expression<Func<<#= tableModel.Name #>, bool>> condition)
        {
            return <#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>Dal.IsExists(condition);
        }

		/// <summary>
        /// <#=tableModel.Description#>-根据查询条件获取总数
        /// <param name="condition">查询条件</param>
        /// </summary>
        /// <returns></returns>
        public int GetCountByQuery(Expression<Func<<#= tableModel.Name #>, bool>> condition)
        {
			return <#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>Dal.GetCountByQuery(condition);
		}

        /// <summary>
        /// <#=tableModel.Description#>-获取所有
        /// </summary>
        /// <returns></returns>
        public List<<#= tableModel.Name #>> GetAll()
        {
            return <#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>Dal.GetAll();
        }

		/// <summary>
        /// <#=tableModel.Description#>-分页查询
        /// </summary>
        /// <param name="startRowIndex">索引开始</param>
        /// <param name="maximumRows">每页信息条数</param>
        /// <param name="condition">查询条件</param>
        /// <param name="totalRecords">总计录数</param>
		/// <param name="orderBy">排序条件</param>
        /// <param name="isDesc">是否倒序</param>
        /// <returns></returns>
		public List<<#= tableModel.Name #>> GetPagedList(int startRowIndex, int maximumRows, Expression<Func<<#= tableModel.Name #>,bool>> condition, Expression<Func<<#= tableModel.Name #>, object>> orderBy, bool isDesc, out int totalRecords)
        {
			return <#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>Dal.GetPagedList(startRowIndex, maximumRows,condition, orderBy, isDesc, out totalRecords);
		}

		/// <summary>
        /// <#=tableModel.Description#>-根据条件查询
        /// </summary>
        /// <param name="condition">条件</param>
        /// <param name="orderBy">排序条件</param>
        /// <param name="isDesc">是否倒序</param>
        /// <returns></returns>
        public List<<#= tableModel.Name #>> GetListByQuery(Expression<Func<<#= tableModel.Name #>, bool>> condition, Expression<Func<<#= tableModel.Name #>, object>> orderBy, bool isDesc)
        {
			return <#= CodeGeneratorHelper.TableNameToLower(tableModel.Name) #>Dal.GetListByQuery(condition, orderBy, isDesc);
		}

    }
}

	
<#
		manager.EndBlock();    
}
       manager.Process(true);  
#> 
